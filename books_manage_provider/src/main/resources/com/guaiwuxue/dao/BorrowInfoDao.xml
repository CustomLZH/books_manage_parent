<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.guaiwuxue.dao.BorrowInfoDao">
    <select id="findPageByCondition" parameterType="com.guaiwuxue.entity.QueryPageBean" resultType="com.guaiwuxue.entity.BorrowInfoReq">
        select bi.*, b.bookName, b.bookWriter, u.userName, u.userPhone from borrow_info as bi
        left join books as b
        on bi.bookId = b.bookId
        left join users as u
        on bi.userId = u.userId
        <where>
            <if test="queryPageBean != null and queryPageBean.requirement != null and queryPageBean.requirement.length > 0 ">
                and b.bookName like concat('%',#{queryPageBean.requirement},'%') or u.userName like concat('%',#{queryPageBean.requirement},'%')
            </if>
            <if test="queryPageBean != null and queryPageBean.screens != null and queryPageBean.screens.size() > 0">
                <if test="queryPageBean.screens.contains(&quot;restore&quot;)">
                    and bi.restore = 1
                </if>
                <if test="queryPageBean.screens.contains(&quot;renew&quot;)">
                    and bi.renew = 1
                </if>
                <if test="queryPageBean.screens.contains(&quot;lose&quot;)">
                    and bi.lose = 1
                </if>
            </if>

        </where>

    </select>

    <delete id="delete" parameterType="long">
        delete from borrow_info where borrowInfoId = #{borrowInfoId}
    </delete>
    <select id="monthFiveBorrowNum" resultType="com.guaiwuxue.entity.MonthFiveBorrowNumResp">
        SELECT bi.bookId, b.bookName, count(bi.borrowInfoId) as count FROM borrow_info as bi
        left join books b
        on bi.bookId = b.bookId
        where bi.borrowDate >= date_add(now(),interval -1 month)
        group by bi.bookId
        ORDER BY count desc
        limit 5
    </select>
    <insert id="createBorrowInfo" parameterType="borrowInfo">
        insert into borrow_info(bookId, userId, borrowDate, returnDate, restore, renew)
        values(#{bookId}, #{userId}, #{borrowDate}, #{returnDate}, #{restore}, #{renew})
    </insert>

    <update id="updateBorrowInfo" parameterType="borrowInfo">
        update borrow_info
        <set>
            <if test="bookId != null">
                bookId = #{bookId},
            </if>
            <if test="userId != null">
                userId = #{userId},
            </if>
            <if test="borrowDate != null">
                borrowDate = #{borrowDate},
            </if>
            <if test="returnDate != null">
                returnDate = #{returnDate},
            </if>
            <if test="restore != null">
                restore = #{restore},
            </if>
            <if test="renew != null">
                renew = #{renew},
            </if>
            <if test="lose != null">
                lose = #{lose},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </set>
        where borrowInfoId = #{borrowInfoId}
    </update>
    <select id="findWeekBorrowNum" resultType="com.guaiwuxue.entity.WeekNumResp">
        SELECT date_format(bi.borrowDate,'%Y-%m-%d') as date, COUNT(*) AS num, WEEKDAY(bi.borrowDate) + 1 as week
        FROM borrow_info as bi
        where bi.borrowDate &gt;= DATE_ADD(now(), INTERVAL -7 DAY)
        and bi.borrowDate &lt;= now()
        GROUP BY date, week
        ORDER BY date
    </select>

</mapper>